schema {
    query: Query
}

type Team {
    id: ID!
    region: String!
    name: String!
    player_one: String!
    player_two: String!
    player_three: String!
    player_sub: String!
    coach: String!

}

type Region {
    name: String!
}

type Player {
    id: ID!
    name: String!
    nationality: String!
    born: String!
    region: String!
    status: String!
    team: String!
    alternate_IDs: String!
    approx_Total_Winnings: String!

}

type TeamResult {
    success: Boolean!
    errors: [String]
    team: Team
}

type TeamsResult {
    success: Boolean!
    errors: [String]
    teams: [Team]
}

type RegionsResult {
    success: Boolean!
    errors: [String]
    region: [Region]
}

type PlayerResult {
    success: Boolean!
    errors: [String]
    player: Player
}

type PlayersResult {
    success: Boolean!
    errors: [String]
    player: [Player]
}

type Query {
    listAllTeams: TeamsResult!
    getTeam_ByName(name: String!): TeamResult!
    getTeam_ByRegion(region: String!): TeamsResult!

    listAllRegions: RegionsResult!

    listAllPlayers: PlayersResult!
    getPlayer_ByName(name: String!): PlayerResult!

    
}